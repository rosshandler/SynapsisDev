#modelling data
lam <- c(100, 850)
set.seed(1234)
Z = rbinom(500, 1, 0.6)
D <- rpois(1000000, lam[Z+1])
#hist(X)

#compute log-likelihood     
#w(i) = P(z(i) = j|x(i);lam, pi)
compute.log.lik <- function(D, w, mean) {
  
  w <- as.numeric(unlist(w))
  #using L from the global environment 
  L[,1] = dpois(D, mean[1], log = TRUE)
  L[,2] = dpois(D, mean[2], log = TRUE)
  
  L[,1] = L[,1]*w[1]
  L[,2] = L[,2]*w[2]
  return(sum(log(rowSums(L))))
}

#generating likelihood matrix L
L = matrix(NA, nrow=length(D), ncol= 2)


#generating EM function 
mixture.EM <- function(lam.init ,w.init, L, D) { 
  w.curr <- w.init
  lam.curr <- lam.init
  D <- as.numeric(D)
  L[,1] <- dpois(D, lam.init[1], log = TRUE)
 
  L[,2] <- dpois(D, lam.init[2], log = TRUE)
 

  # store log-likehoods for each iteration
  log_liks <- c()
  ll       <- compute.log.lik(D, w.curr, lam.curr)
  log_liks <- c(log_liks, ll)
  delta.ll <- 1

  while(delta.ll > 1e-5 & delta.ll != "NaN") {
    out   <- EM.iter(w.curr, L, D)
    ll       <- compute.log.lik(D, out$w.next, out$lam.next)
    log_liks <- c(log_liks, ll)
    delta.ll <- log_liks[length(log_liks)]  - log_liks[length(log_liks)-1]
  }
  
  out <- EM.iter(w.curr, L, D)
  w.curr <- out$w.next
  posteriors <- out$z_ik
  lam.curr <- out$lam.next
  
  return(list(w.curr, log_liks, posteriors, lam.init, lam.curr))
}

EM.iter <- function(w.curr, L, D, ...) {
  
  # E-step: compute E_{Z|X,w0}[I(Z_i = k)] (posteriors)
  z_ik <- L
  w.curr <- as.numeric(unlist(w.curr))
  for(i in seq_len(ncol(L))) {
    z_ik[,i] <- w.curr[i]*z_ik[,i]
  }
  z_ik     <- z_ik / rowSums(z_ik)
 
  
  # M-step
  w.next   <- colSums(z_ik)/sum(z_ik)
  lam.one <- sum(D*z_ik[,1])/sum(z_ik[,1])
  lam.two <- sum(D*z_ik[,2])/sum(z_ik[,2])
  lam.next <- c(lam.one, lam.two)
  out <- list(w.next, z_ik, lam.next)
  names(out) <- c("w.next", "z_ik", "lam.next")
  return(out)
}

#reading data
metadata <- read.csv('/data2/hanna/synaptogenesis/newvolume/analysis/metadata_alt.csv')
D <- metadata$tscp_count

#estimating means 
h_fraction <- metadata$tscp_count[metadata$cell_species == 'h']
m_fraction <- metadata$tscp_count[metadata$cell_species == 'm']

length(h_fraction)
[1] 54149
length(m_fraction)
[1] 16303
length(m_fraction)+length(h_fraction)
[1] 70452
length(D)
[1] 70452

lam <- c()
lam[1] <- mean(h_fraction)
lam[2] <- mean(m_fraction)

lam
[1] 5077.281 6497.055

ee <- mixture.EM(lam.init = c(5070, 6500), w.init=c(0.5,0.5), L, D)














